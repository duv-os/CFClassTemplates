Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "App Environment Configuration"
        Parameters:
          - ENVIRONMENT
          - CLASS
          - MinSize
          - MaxSize
          - DesiredCapacity
Parameters:
  CLASS:
    Type: String
    Description: Application Version to Deploy
    Default: "ITSE-1359-1001"
  STUDENTNAME:
    Type: String
    Description: Name of student (Ex - akroll)
    Default: "akroll"
  ENVIRONMENT:
    Type: String
    Description: Type of environment to provision
    Default: DEV
    AllowedValues:
      - DEV
      - TEST
      - PROD
      - PRESALES
  SERVEROS:
    Type: String
    Description: Server Operating System to deploy 
    Default: AMALINUX
    AllowedValues:
      - AMALINUX
      - SERVER2016
      - RH
      - UBUNTU
  SERVEROS2:
    Type: String
    Description: Server Operating System to deploy 
    Default: UBUNTU
    AllowedValues:
      - AMALINUX
      - SERVER2016
      - RH
      - UBUNTU
Mappings:
  RegionMap:
    us-east-1:
      "AMALINUX" : "ami-428aa838" # AMALINUX 2 JAN 2018
      "RH" : "ami-c998b6b2"
    us-east-2:
      "AMALINUX" : "ami-710e2414" # AMALINUX 2 JAN 2018
      "UBUNTU" : "ami-965e6bf3" # UBUNTU MARCH 2018
    us-west-1:
      "AMALINUX" : "ami-4a787a2a" # AMALINUX 2 JAN 2018
      "RH" : "ami-66eec506"
      "UBUNTU" : "ami-07585467" # UBUNTU MARCH 2018
    us-west-2:
      "AMALINUX" : "ami-7f43f307" # AMALINUX 2 JAN 2018
      "SERVER2016" : "ami-d7a114af"
    ca-central-1:
      "AMALINUX" : "ami-eb20928f" # AMALINUX SEP 2016 v01
    eu-west-1:
      "AMALINUX" : "ami-d41d58a7" # AMALINUX SEP 2016
    eu-central-1:
      "AMALINUX" : "ami-0044b96f" # AMALINUX SEP 2016
    eu-west-2:
      "AMALINUX" : "ami-bfe0eadb" # AMALINUX SEP 2016 v01
    ap-southeast-1:
      "AMALINUX" : "ami-7243e611" # AMALINUX SEP 2016
    ap-southeast-2:
      "AMALINUX" : "ami-8536d6e7" # AMALINUX OCT 2017
      "SERVER2016" : "ami-82a458e0" # SERVER 2016 FEB 2018
    ap-northeast-2:
      "AMALINUX" : "ami-a04297ce" # AMALINUX SEP 2016
    ap-northeast-1:
      "AMALINUX" : "ami-1a15c77b" # AMALINUX SEP 2016
    ap-south-1:
      "AMALINUX" : "ami-cacbbea5" # AMALINUX SEP 2016
    sa-east-1:
      "AMALINUX" : "ami-f1344b9d" # AMALINUX SEP 2016
      "RH" : "ami-a789ffcb"
      "SERVER2016" : "ami-1d364b71"
  InstanceSize:
    DEV:
      "EC2" : "t2.micro"
    TEST:
      "EC2" : "t2.micro"
    PROD:
      "EC2" : "t2.medium"
    PRESALES:
      "EC2" : "t2.micro"
Resources:
  AutoSubnetCustomResource:
    Type: "Custom::LambdaAutoSubnet" # or AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !ImportValue sharedinf-autosubnetarn # The ARN of the lambda function - only mandatory property
      # "Provider Defined Properties" Below..
      DynamoDBRegion: !Ref "AWS::Region"
      DynamoDBTable: !ImportValue sharedinf-autosubnetddbtablename
      VPCCidr: !ImportValue sharedinf-vpciprange
      Debug: "True"
  SubnetPublicA: # Public Subnet for App Env in AZ - A
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ]
      CidrBlock: !GetAtt AutoSubnetCustomResource.AppPublicCIDRA
      MapPublicIpOnLaunch: true
      VpcId: !ImportValue sharedinf-vpcid
      Tags:
        -
          Key: Name
          Value: !Join ["", [!Ref CLASS, "-", !Ref STUDENTNAME, "-PublicSubnet"]]
  SubnetRouteTableAssociatePublicA: # Associates the subnet with a route table - passed via import
    DependsOn: SubnetPublicA
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !ImportValue sharedinf-publicrt
      SubnetId: !Ref SubnetPublicA
  SG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: !Join ["", [!Ref CLASS, "-", !Ref STUDENTNAME, "-", "PublicSG"]]
      GroupDescription: !Join ["", [!Ref CLASS, "-", !Ref STUDENTNAME, "-", "PublicSG", "  StackID: ", !Ref "AWS::StackId"]]
      VpcId: !ImportValue sharedinf-vpcid
      SecurityGroupIngress:
        -
          CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          ToPort: "80"
          FromPort: "80"
        -
          CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          ToPort: "22"
          FromPort: "22"
        -
          CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          ToPort: "3389"
          FromPort: "3389"
        -
          CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          ToPort: "631"
          FromPort: "631"
      SecurityGroupEgress:
        -
          CidrIp: 0.0.0.0/0
          ToPort: "-1"
          IpProtocol: "-1"
      Tags:
        -
          Key: Class
          Value: !Ref CLASS
        -
          Key: Name
          Value: !Ref STUDENTNAME
  EC21: # for now this is in a public subnet, needs to be changed.
    Type: "AWS::EC2::Instance"
    DeletionPolicy: Delete
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", !Ref SERVEROS] # Dynamic mapping + Pseudo Parameter
      InstanceType: !FindInMap [InstanceSize, !Ref ENVIRONMENT, EC2]
      KeyName: !Join ["", [!Ref CLASS, "-", "KP", "-", !Ref STUDENTNAME]]
      IamInstanceProfile: Class-SSM-Role
      SecurityGroupIds:
        - !Ref SG
      SubnetId: !Ref SubnetPublicA
      Tags:
        -
          Key: Class
          Value: !Ref CLASS
        -
          Key: Name
          Value: !Ref STUDENTNAME
        -
          Key: ServerType
          Value: Bastion
        -
          Key: SERVEROS
          Value: !Ref SERVEROS
  EC22: # for now this is in a public subnet, needs to be changed.
    Type: "AWS::EC2::Instance"
    DeletionPolicy: Delete
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", !Ref SERVEROS2] # Dynamic mapping + Pseudo Parameter
      InstanceType: !FindInMap [InstanceSize, !Ref ENVIRONMENT, EC2]
      KeyName: !Join ["", [!Ref CLASS, "-", "KP", "-", !Ref STUDENTNAME]]
      IamInstanceProfile: Class-SSM-Role
      SecurityGroupIds:
        - !Ref SG
      SubnetId: !Ref SubnetPublicA
      Tags:
        -
          Key: Class
          Value: !Ref CLASS
        -
          Key: Name
          Value: !Ref STUDENTNAME
        -
          Key: ServerType
          Value: Bastion
        -
          Key: SERVEROS
          Value: !Ref SERVEROS2
Outputs:
  PublicSG:
    Description: Public SG ID
    Value: !Ref SG
    Export:
      Name: !Join ["", [studentpublicsg, "-", !Ref STUDENTNAME]]